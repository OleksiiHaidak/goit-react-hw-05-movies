{"version":3,"file":"static/js/881.74bc1557.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"Movies_SearchForm__EKSZc\",\"SearchFormButton\":\"Movies_SearchFormButton__yo7B9\",\"SearchFormButtonLabel\":\"Movies_SearchFormButtonLabel__EPDCR\",\"SearchFormInput\":\"Movies_SearchFormInput__48VGd\",\"list\":\"Movies_list__hqYjd\",\"listItem\":\"Movies_listItem__YWcFi\",\"loading\":\"Movies_loading__sAADI\"};","import React, { useState, useEffect } from \"react\";\nimport { useSearchParams, Link, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Notiflix from \"notiflix\";\nimport css from \"pages/Movies/Movies.module.css\";\n\n\nconst themoviedbApiKey = \"4219f818c3b647ef6b7c71c399226158\";\nconst url = \"https://api.themoviedb.org/3/search/movie\";\n\nconst Movies = () => {\n    \n    const [searchParams, setSearchParams] = useSearchParams();\n    const queryValue = searchParams.get('query');\n    const [searchedFilms, setSearchedFilms] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const location = useLocation();\n\n    const onFormSubmit = evt => { \n        evt.preventDefault();\n        const value = evt.currentTarget.elements.searchKey.value;\n        if (value.trim() === \"\") {\n            Notiflix.Notify.info('Please enter your request', { position: 'center-center', fontSize: '16px' });\n            return;\n        }\n        setSearchParams({ query: value });\n    };\n\n\n    useEffect(() => {\n        if (!queryValue) return;\n        const fetchDataFilm = async () => {\n            try {\n                setIsLoading(true);\n                const response = await axios.get(`${url}?api_key=${themoviedbApiKey}&query=${queryValue}`);\n                setSearchedFilms(response.data);\n                if (response.data.results.length === 0) {\n                    Notiflix.Notify.info('Sorry, there are no films matching your search query', { position: 'center-center', width: '460px', fontSize: '16px' });\n                }\n            } catch (error) {\n                Notiflix.Notify.failure('Oops, something went wrong', { position: 'center-center', fontSize: '16px' });\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        fetchDataFilm();\n    }, [queryValue]);\n\n    \n    return (\n        <main>\n            <form className={css.SearchForm} onSubmit={onFormSubmit}>\n                <button type=\"submit\" className={css.SearchFormButton}>\n                    <span className={css.SearchFormButtonLabel}>Search</span>\n                </button>\n                <input\n                    className={css.SearchFormInput}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search films\"\n                    name=\"searchKey\"\n                />\n            </form>\n            {isLoading && <div className={css.loading}>Loading...</div>}\n            <ul className={css.list}>\n                {searchedFilms !== null && searchedFilms.results.map(film => (\n                     <li key={film.id}>\n                        <Link state={{from: location}} to={`/movies/${film.id}`} className={css.listItem}>\n                             <span>{film.title}</span>\n                         </Link>\n                     </li>\n                ))}\n            </ul>\n        </main>\n    );\n};\n\nexport default Movies;"],"names":["_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","queryValue","get","_useState","useState","_useState2","searchedFilms","setSearchedFilms","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","useEffect","fetchDataFilm","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","concat","sent","data","results","length","Notiflix","position","width","fontSize","t0","finish","stop","apply","arguments","_jsxs","children","className","css","onSubmit","evt","preventDefault","value","currentTarget","elements","searchKey","trim","query","_jsx","type","autoComplete","autoFocus","placeholder","name","map","film","Link","state","from","to","id","title"],"sourceRoot":""}